plugins {
    id 'com.android.library'
}

android {
    compileSdk 30

    defaultConfig {
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        ndk{
            moduleName "MyLib-jni"
            //abiFilters "arm64-v8a", "armeabi-v7a", "x86" //输出指定的三种abi体系下的so库
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
//Copy类型
task makeJar(type: Copy) {
    //删除存在的
    delete 'build/libs/myJni.aar'
    //设置拷贝的文件
    from('build/outputs/aar/')
    //打进jar包后的文件目录
    into('build/libs/')
    //将aar放入build/libs/目录下
    //include ,exclude参数来设置过滤
    include('myJni-release.aar')
    //重命名
    rename ('myJni-release.aar', 'myJni.aar')
}

makeJar.dependsOn(build)
//在终端执行生成JAR包
// gradlew makeJar